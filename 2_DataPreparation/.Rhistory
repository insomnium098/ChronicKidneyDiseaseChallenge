race <- df[i,"race"]
unique(df$gender)
i <- 41
gfr <- df[i,"creatinine_value"]
sex <- df[i,"gender"]
race <- df[i,"race"]
cr <- df[i,"creatinine_value"]
rm(gfr)
df$GFR <- 0
age <- df[i,"age"]
unique(demo$race)
calculate_gfr <- function(df){
df$GFR <- 0
for (i in 1:nrow(df)){
cr <- df[i,"creatinine_value"]
sex <- df[i,"gender"]
race <- df[i,"race"]
age <- df[i,"age"]
if(sex == "Female"){
if(cr <= 0.7){
gfr <- 144 * ((cr / 0.7)^(-0.329)) * (0.993^(age))
} else {
gfr <- 144 * ((cr / 0.7)^(-1.209)) * (0.993^(age))
}
} else {
if(cr <= 0.9){
gfr <- 141 * ((cr / 0.9)^(-0.411)) * (0.993^(age))
} else {
gfr <- 141 * ((cr / 0.9)^(-1.209)) * (0.993^(age))
}
}
if (sex == "Black"){
gfr <- gfr * 1.159
}
df[i,"GFR"] <- gfr
}
return(df)
}
test <- calculate_gfr(creatinine_demo)
View(test)
calculate_gfr <- function(df){
df$GFR <- 0
for (i in 1:nrow(df)){
cr <- df[i,"creatinine_value"]
sex <- df[i,"gender"]
race <- df[i,"race"]
age <- df[i,"age"]
if(sex == "Female"){
if(cr <= 0.7){
gfr <- 144 * ((cr / 0.7)^(-0.329)) * (0.993^(age))
} else {
gfr <- 144 * ((cr / 0.7)^(-1.209)) * (0.993^(age))
}
} else {
if(cr <= 0.9){
gfr <- 141 * ((cr / 0.9)^(-0.411)) * (0.993^(age))
} else {
gfr <- 141 * ((cr / 0.9)^(-1.209)) * (0.993^(age))
}
}
if (sex == "Black"){
gfr <- gfr * 1.159
}
df[i,"GFR"] <- round(gfr)
}
return(df)
}
test <- calculate_gfr(creatinine_demo)
View(test)
plot(test$Window, test$GFR)
hist(test$GFR)
creatinine <- calculate_gfr(creatinine_demo)
rm(creatinine_demo)
df <- creatinine
df$gfr_class <- 0
gfr_classify <- function(df){
df$gfr_class <- 0
for (i in 1:nrow(df)){
gfr <- df[i,"GFR"]
if (gfr >= 90 ){
df[i,"gfr_class"] <- "G1"
} else if (between(gfr, 60, 89)){
df[i,"gfr_class"] <- "G2"
} else if (between(gfr, 45, 59)){
df[i,"gfr_class"] <- "G3a"
} else if (between(gfr, 30, 44)){
df[i,"gfr_class"] <- "G3b"
} else if (between(gfr, 15, 29)){
df[i,"gfr_class"] <- "G4"
} else {
df[i,"gfr_class"] <- "G5"
}
}
return(df)
}
##We will also clasiffy the patients in 5 categories
##depending on their GFR
test <- gfr_classify(creatinine)
View(test)
unique(test$gfr_class)
gfr_classify <- function(df){
df$gfr_class <- 0
for (i in 1:nrow(df)){
gfr <- df[i,"GFR"]
if (gfr >= 90 ){
df[i,"gfr_class"] <- "G1"
} else if (between(gfr, 60, 89)){
df[i,"gfr_class"] <- "G2"
} else if (between(gfr, 45, 59)){
df[i,"gfr_class"] <- "G3a"
} else if (between(gfr, 30, 44)){
df[i,"gfr_class"] <- "G3b"
} else if (between(gfr, 16, 29)){
df[i,"gfr_class"] <- "G4"
} else {
df[i,"gfr_class"] <- "G5"
}
}
return(df)
}
##We will also clasiffy the patients in 5 categories
##depending on their GFR
test <- gfr_classify(creatinine)
View(test)
View(meds_window)
View(meds_patient)
meds <- read.csv("../1_OriginalDatasets/T_meds.csv")
View(meds)
rm(meds)
##We will also clasiffy the patients in 5 categories
##depending on their GFR
creatinine <- gfr_classify(creatinine)
View(creatinine)
64 - mean(59, 56, 56)
49 - mean(56, 64, 64)
1200/360
df <- creatinine
View(df)
patient <- 0
df_filt1 <- filter(df, id == patient)
View(df_filt1)
maxWindow <- max(df_filt1$Window)
1:nrow(df_filt1)
df_filt1$gfr_evolution <- -1
View(df_filt1)
df_filt1[-1,]
1:6
1:6[-3]
tail(1:6,3)
tail(1:2,3)
x <- 1:2
tail(x,3)
tail(x,ifelse(x<3), x-1, x-3)
tail(x,ifelse(x<3, x-1, x-3))
tail(x,ifelse(x < 3, length(x)-1, x-3))
length(x)
length(x) - 1
tail(x,ifelse(x < 3, length(x)-1, length(x)-3))
tail(x,ifelse(length(x) < 3, length(x)-1, x-3))
ifelse(length(x) < 3, length(x)-1, x-3)
ifelse(length(x) < 3, length(x)-1, x-3)ifelse(length(x) < 3, length(x)-1, x-3)
tail(x,1)
tail(x)
tail(x,-1)
tail(x,-2)
tail(x,2)
tail(x,0)
tail(x,1)
tail(x,2)
tail(x,3)
currentGFR <- df_filt1[window,"GFR"]
window <- 10
tail(1:window,3)
mean(df_filt1[tail(1:window,3),"GFR"])
#For each patient we will iterate over all of its windows
counter <- 0
for (window in 1:nrow(df_filt1)){
currentGFR <- df_filt1[window,"GFR"]
##Base case
if(window == 1){
df_filt1[window,"gfr_evolution"] <- 0
counter <- counter + 1
} else if (window < 3 & window != 1) {
df_filt1[window,"gfr_evolution"] <- currentGFR -
df_filt1[window-1,"GFR"]
counter <- counter + 1
} else {
df_filt1[window,"gfr_evolution"] <- currentGFR -
mean(df_filt1[tail(1:window,3),"GFR"])
counter = counter + 1
}
}
View(df_filt1)
64 - mean(59 + 56 + 56)
64 - mean(c(59,56,56))
1:5
tail(1:5, 3)
tail(1:5, 4)
tail(1:5, 4)[1:3]
for (window in 1:nrow(df_filt1)){
currentGFR <- df_filt1[window,"GFR"]
##Base case
if(window == 1){
df_filt1[window,"gfr_evolution"] <- 0
counter <- counter + 1
} else if (window < 3 & window != 1) {
df_filt1[window,"gfr_evolution"] <- currentGFR -
df_filt1[window-1,"GFR"]
counter <- counter + 1
} else {
df_filt1[window,"gfr_evolution"] <- currentGFR -
mean(df_filt1[tail(1:window,4)[1:3],"GFR"])
counter = counter + 1
}
}
View(df_filt1)
64 - mean(c(59,56,56))
gfr_evolution <- function(df){
##First we will filter by patient
for (patient in unique(df$id)){
df_filt1 <- filter(df, id == patient)
df_filt1$gfr_evolution <- -1
#For each patient we will iterate over all of its windows
counter <- 0
for (window in 1:nrow(df_filt1)){
currentGFR <- df_filt1[window,"GFR"]
##Base case
if(window == 1){
df_filt1[window,"gfr_evolution"] <- 0
counter <- counter + 1
} else if (window < 3 & window != 1) {
df_filt1[window,"gfr_evolution"] <- currentGFR -
df_filt1[window-1,"GFR"]
counter <- counter + 1
} else {
df_filt1[window,"gfr_evolution"] <- currentGFR -
mean(df_filt1[tail(1:window,4)[1:3],"GFR"])
counter = counter + 1
}
}
if(!exists("df_patient")){
df_patient <- df_filt1
} else {
df_patient <- rbind(df_patient, df_filt1)
}
}
return(df_patient)
}
test <- gfr_evolution(creatinine)
View(test)
28 - mean(c(29,29))
testa <- filter(test, id == 126)
View(testa)
rm(testa)
rm(test)
rm(df_filt1)
#Rapid progression is defined as a sustained decline in
#eGFR of more than 5 ml/min/1.73 m2 per yr.
#Thus, we will calculate the evolution of GFR each 3 windows per
#patient
creatinine <- gfr_evolution(creatinine)
View(creatinine)
creatinine <- subset(creatinine, select = -c(race, gender, age))
View(creatinine)
creatinine <- dummy_columns(creatinine,select_columns = c("gfr_class"),
remove_selected_columns  = TRUE)
View(creatinine)
rm(creatinine_demo)
rm(creatinine_window)
View(meds_window)
View(demo)
###Demo
demo <- dummy_columns(demo,select_columns = c("race", "gender"),
remove_selected_columns  = TRUE)
View(demo)
View(glucose_window)
View(hgb)
View(hgb)
#####Finally we will merge the glucose, hgb,bp, ldl, creatinine,
##demo and response
hgb <- subset(hgb, select = -c(time, window))
View(hgb)
View(bp)
View(ldl)
View(creatinine)
creatinine <- subset(creatinine, select = -c(time, window))
View(creatinine)
?merge
finalDF <- merge(glucose, hgb,
by = c("id", "Window"))
finalDF <- merge(glucose_window, hgb,
by = c("id", "Window"))
View(finalDF)
finalDF <- merge(finalDF, bp,
by = c("id", "Window"))
finalDF <- merge(finalDF, ldl,
by = c("id", "Window"))
View(response)
unique(response$Stage_Progress)
##response
##0 not progressed, 1 progressed
response$Stage_Progress <- gsub("False",0, fixed = TRUE)
##response
##0 not progressed, 1 progressed
response$Stage_Progress <- gsub("False",0,response$Stage_Progress,
fixed = TRUE)
View(response)
response$Stage_Progress <- gsub("True",1,response$Stage_Progress,
fixed = TRUE)
View(response)
finalDF <- merge(finalDF, creatinine,
by = c("id", "Window"))
finalDF <- merge(finalDF, demo,
by = c("id", "Window"))
View(demo)
finalDF <- merge(finalDF, demo,
by = c("id"))
finalDF <- merge(finalDF, meds_window,
by = c("id", "Window"))
finalDF <- merge(finalDF, response,
by = c("id"))
View(finalDF)
write.csv(finalDF, "DataPrepared.csv", row.names = FALSE)
View(finalDF)
View(finalDF)
View(response)
nameOutput <- paste0("DataPrepared_", window,".csv")
nameOutput
window <- 30
nameOutput <- paste0("DataPrepared_", window,".csv")
source('~/OneDrive - UNIVERSIDAD NACIONAL AUTÓNOMA DE MÉXICO/owncloud/HACKATONES/HOLMUSK/ChronicKidneyDiseaseChallenge/2_DataPreparation/Script_DataPreparation.R', echo=TRUE)
source('~/OneDrive - UNIVERSIDAD NACIONAL AUTÓNOMA DE MÉXICO/owncloud/HACKATONES/HOLMUSK/ChronicKidneyDiseaseChallenge/2_DataPreparation/Script_DataPreparation.R', echo=TRUE)
nrow(filter(creatinine, gfr_class_G3a == 1))
nrow(filter(creatinine, gfr_class_G3b == 1))
nrow(filter(creatinine, gfr_class_G4 == 1))
nrow(filter(creatinine, gfr_class_G5 == 1))
nrow(filter(creatinine, gfr_class_G2 == 1))
nrow(filter(creatinine, gfr_class_G1 == 1))
View(finalDF)
boxplot(finalDF$gfr_class_G3b, finalDF$Stage_Progress)
source('~/OneDrive - UNIVERSIDAD NACIONAL AUTÓNOMA DE MÉXICO/owncloud/HACKATONES/HOLMUSK/ChronicKidneyDiseaseChallenge/2_DataPreparation/Script_DataPreparation.R', echo=TRUE)
source('~/OneDrive - UNIVERSIDAD NACIONAL AUTÓNOMA DE MÉXICO/owncloud/HACKATONES/HOLMUSK/ChronicKidneyDiseaseChallenge/2_DataPreparation/Script_DataPreparation.R', echo=TRUE)
View(finalDF)
source('~/OneDrive - UNIVERSIDAD NACIONAL AUTÓNOMA DE MÉXICO/owncloud/HACKATONES/HOLMUSK/ChronicKidneyDiseaseChallenge/2_DataPreparation/Script_DataPreparation.R', echo=TRUE)
source('~/OneDrive - UNIVERSIDAD NACIONAL AUTÓNOMA DE MÉXICO/owncloud/HACKATONES/HOLMUSK/ChronicKidneyDiseaseChallenge/2_DataPreparation/Script_DataPreparation.R', echo=TRUE)
View(df_patient_maxTime)
creatinine <- read.csv("../1_OriginalDatasets/T_creatinine.csv")
View(creatinine)
480 - 231
View(finalDF)
sum(finalDF$`WindowCombinationDrugs_atorvastatin-losartan-10-100`)
sum(finalDF$`Drug_DailyDosage_DurationDose_metoprolol-100-60`)
View(finalDF)
test <- subset(finalDF, select = c("id", "Window", "creatinine_value", "GFR", "grf_evolution", "Stage_Progress"))
test <- subset(finalDF, select = c(id, Window, creatinine_value, GFR, grf_evolution, Stage_Progress))
test <- subset(finalDF, select = c(id, Window, creatinine_value, GFR, gfr_evolution, Stage_Progress))
View(test)
View(ldl)
dbp <- read.csv("../1_OriginalDatasets/T_DBP.csv")
sbp <- read.csv("../1_OriginalDatasets/T_SBP.csv")
demo <- read.csv("../1_OriginalDatasets/T_demo.csv")
ldl <- read.csv("../1_OriginalDatasets/T_ldl.csv")
hgb <- read.csv("../1_OriginalDatasets/T_HGB.csv")
creatinine <- read.csv("../1_OriginalDatasets/T_creatinine.csv")
meds <- read.csv("../1_OriginalDatasets/T_meds.csv")
glucose <- read.csv("../1_OriginalDatasets/T_glucose.csv")
View(bp)
View(dbp)
View(glucose)
621-182
hist(glucose$time)
library(data.table)
glucose <- setDT(glucose)
glucoseDiff <- glucose[, diff := value - shift(value),
by = id]
View(glucoseDiff)
glucoseDiff <- glucose[, diff := time - shift(time),
by = id]
View(glucoseDiff)
mean(glucoseDiff)
glucoseDiff[is.na(glucoseDiff)] <- 0
glucoseDiff <- glucose[, diff := time - shift(time),
by = id]
mean(glucoseDiff$diff)
glucoseDiff[is.na(glucoseDiff)] <- 0
mean(glucoseDiff$diff)
df <- glucose
eval_times <- function(df){
df <- setDT(df)
dfDiff <- df[, diff := time - shift(time),
by = id]
dfDiff[is.na(dfDiff)] <- 0
return(dfDiff)
}
source("Script_Utils.R")
dbp <- read.csv("../1_OriginalDatasets/T_DBP.csv")
sbp <- read.csv("../1_OriginalDatasets/T_SBP.csv")
demo <- read.csv("../1_OriginalDatasets/T_demo.csv")
ldl <- read.csv("../1_OriginalDatasets/T_ldl.csv")
hgb <- read.csv("../1_OriginalDatasets/T_HGB.csv")
creatinine <- read.csv("../1_OriginalDatasets/T_creatinine.csv")
meds <- read.csv("../1_OriginalDatasets/T_meds.csv")
glucose <- read.csv("../1_OriginalDatasets/T_glucose.csv")
glucose <- eval_times(glucose)
View(glucose)
mean(glucoseDiff$diff)
mean(glucose$diff)
dbp <- eval_times(dbp)
##Mean of glucose : 110 days
mean(dbp$diff)
sbp <- eval_times(sbp)
##Mean of dbp : 99 days
mean(sbp$diff)
ldl <- eval_times(ldl)
##Mean of sbp : 99 days
mean(ldl$diff)
hgb <- eval_times(hgb)
##Mean of hgb : 135 days
mean(hgb$diff)
creatinine <- eval_times(creatinine)
##Mean of creatinine : 167 days
mean(creatinine$diff)
meds <- eval_times(meds)
View(meds)
View(meds)
meds$time <- meds$end_day
meds <- eval_times(meds)
##Mean of creatinine : 120 days
mean(meds$diff)
meds <- read.csv("../1_OriginalDatasets/T_meds.csv")
meds$duration <- meds$end_day - meds$start_day
##Mean of meds duration: 120 days
mean(meds$duration)
mean(110, 99 , 99, 135, 167, 120, 79)
mean(110, 99 , 99, 135, 167, 120)
mean(110, 99 , 99, 135, 167, 120, 790)
mean(110, 99 , 99, 135, 167, 120, 790, 9000)
mean(2)
mean(c(110, 99 , 99, 135, 167, 120, 79))
mean(c(110, 99 , 99, 135, 167, 120))
View(dbp)
View(creatinine)
360 / 4
360 / 3
dat <- read.csv("DataPrepared_180.csv")
View(dat)
response <- read.csv("../1_OriginalDatasets/T_stage.csv")
dbp <- read.csv("../1_OriginalDatasets/T_DBP.csv")
sbp <- read.csv("../1_OriginalDatasets/T_SBP.csv")
demo <- read.csv("../1_OriginalDatasets/T_demo.csv")
ldl <- read.csv("../1_OriginalDatasets/T_ldl.csv")
hgb <- read.csv("../1_OriginalDatasets/T_HGB.csv")
creatinine <- read.csv("../1_OriginalDatasets/T_creatinine.csv")
meds <- read.csv("../1_OriginalDatasets/T_meds.csv")
glucose <- read.csv("../1_OriginalDatasets/T_glucose.csv")
for (i in unique(df_patients$id)){
max_pat <- max(df_patients[df_patients$id == i,"time"])
max_pat_df <- as.data.frame(max_pat)
max_pat_df$id <- i
max_pat_df <- max_pat_df[,c(2,1)]
colnames(max_pat_df)[2] <- "max_time"
if(!exists("df_patient_maxTime")){
df_patient_maxTime <- max_pat_df
} else{
df_patient_maxTime <- rbind(df_patient_maxTime, max_pat_df)
}
}
##Per patient, we will calculate the max days evaluated in any of the datasets,
### to ease the processing
df_patients <- rbind(dbp, sbp, ldl, hgb, creatinine, glucose)
df_patients <- df_patients[,c(1,3)]
meds_patient <- subset(meds, select = c("id", "end_day"))
colnames(meds_patient)[2] <- "time"
for (i in unique(df_patients$id)){
max_pat <- max(df_patients[df_patients$id == i,"time"])
max_pat_df <- as.data.frame(max_pat)
max_pat_df$id <- i
max_pat_df <- max_pat_df[,c(2,1)]
colnames(max_pat_df)[2] <- "max_time"
if(!exists("df_patient_maxTime")){
df_patient_maxTime <- max_pat_df
} else{
df_patient_maxTime <- rbind(df_patient_maxTime, max_pat_df)
}
}
View(df_patient_maxTime)
View(creatinine)
View(df_patient_maxTime)
View(dat)
View(creatinine)
creatinine_window <- makeWindows(window, creatinine, df_patient_maxTime)
window <- 120
creatinine_window <- makeWindows(window, creatinine, df_patient_maxTime)
View(creatinine_window)
mean(c(1.29, 1.15))
rep(1.29, 127)
c(rep(1.29, 107), rep(107, 13))
View(creatinine_window)
View(creatinine)
c(rep(1.29, 107), rep(1.15, 13))
mean(c(rep(1.29, 107), rep(1.15, 13)))
View(creatinine)
View(creatinine_window)
View(dat)
sum(dat$gfr_class_G3b)
sum(dat$gfr_class_G2)
st <- read.csv("../1_OriginalDatasets/T_stage.csv")
View(st)
nrow(filter(st$Stage_Progress == "True"))
library(dplyr)
nrow(filter(st$Stage_Progress == "True"))
nrow(filter(st,Stage_Progress == "True"))
